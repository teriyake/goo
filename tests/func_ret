Input: (def add_num (a b) (ret (+ a b))) (add_num 3 5)
AST: []interface {}{parser.FunctionDefinition{Name:"add_num", Params:[]string{"a", "b"}, Body:[]interface {}{parser.ReturnStatement{ReturnValue:[]interface {}{[]interface {}{parser.Operator{Value:"+"}, parser.Identifier{Value:"a"}, parser.Identifier{Value:"b"}}}}}}, []interface {}{parser.Identifier{Value:"add_num"}, parser.Number{Value:3}, parser.Number{Value:5}}}
Raw Bytecode: [47 19 0 0 0 30 1 0 0 0 97 30 1 0 0 0 98 0 46 45 7 0 0 0 97 100 100 95 110 117 109 0 0 0 0 2 0 0 0 2 0 0 0 1 0 0 0 97 1 0 0 0 98 31 0 0 0 0 0 0 8 64 31 0 0 0 0 0 0 20 64 48 7 0 0 0 97 100 100 95 110 117 109]
===current opcode: 30	byte index: 1
===current opcode: 30	byte index: 7
===current opcode: 0	byte index: 13
===current opcode: 46	byte index: 14
Generated Bytecode Instructions: [{47 [[4 0 0 0]]} {30 [[97]]} {30 [[98]]} {0 []} {46 []} {45 [[97 100 100 95 110 117 109] [0 0 0 0] [2 0 0 0] [2 0 0 0] [1 0 0 0] [97] [1 0 0 0] [98]]} {31 [[0 0 0 0 0 0 8 64]]} {31 [[0 0 0 0 0 0 20 64]]} {48 [[97 100 100 95 110 117 109]]}]
Initial VM State:
&{stack:[] pc:0 code:[{Opcode:47 Operands:[[4 0 0 0]]} {Opcode:30 Operands:[[97]]} {Opcode:30 Operands:[[98]]} {Opcode:0 Operands:[]} {Opcode:46 Operands:[]} {Opcode:45 Operands:[[97 100 100 95 110 117 109] [0 0 0 0] [2 0 0 0] [2 0 0 0] [1 0 0 0] [97] [1 0 0 0] [98]]} {Opcode:31 Operands:[[0 0 0 0 0 0 8 64]]} {Opcode:31 Operands:[[0 0 0 0 0 0 20 64]]} {Opcode:48 Operands:[[97 100 100 95 110 117 109]]}] symbolTableStack:[0x14000011650] functions:map[] callStack:[]}
Executing Instruction at PC 0: Opcode 47, Operands [[4 0 0 0]]
Current PC: 1	Jump offset: 4
Updated PC: 5
Executing Instruction at PC 5: Opcode 45, Operands [[97 100 100 95 110 117 109] [0 0 0 0] [2 0 0 0] [2 0 0 0] [1 0 0 0] [97] [1 0 0 0] [98]]
Function add_num defined with param count: 2 and params: [a b]
Function add_num starts at: 1
Current PC: 6
Executing Instruction at PC 6: Opcode 31, Operands [[0 0 0 0 0 0 8 64]]
Stack after PUSH_NUMBER: [3]
Executing Instruction at PC 7: Opcode 31, Operands [[0 0 0 0 0 0 20 64]]
Stack after PUSH_NUMBER: [3 5]
Executing Instruction at PC 8: Opcode 48, Operands [[97 100 100 95 110 117 109]]
Executing Instruction at PC 1: Opcode 30, Operands [[97]]
Stack after PUSH_VARIABLE (a): [3]
Executing Instruction at PC 2: Opcode 30, Operands [[98]]
Stack after PUSH_VARIABLE (b): [3 5]
Executing Instruction at PC 3: Opcode 0, Operands []
Stack after ADD: [8]
Executing Instruction at PC 4: Opcode 46, Operands []
Final VM State:
&{stack:[8] pc:9 code:[{Opcode:47 Operands:[[4 0 0 0]]} {Opcode:30 Operands:[[97]]} {Opcode:30 Operands:[[98]]} {Opcode:0 Operands:[]} {Opcode:46 Operands:[]} {Opcode:45 Operands:[[97 100 100 95 110 117 109] [0 0 0 0] [2 0 0 0] [2 0 0 0] [1 0 0 0] [97] [1 0 0 0] [98]]} {Opcode:31 Operands:[[0 0 0 0 0 0 8 64]]} {Opcode:31 Operands:[[0 0 0 0 0 0 20 64]]} {Opcode:48 Operands:[[97 100 100 95 110 117 109]]}] symbolTableStack:[0x14000011650 0x14000011650] functions:map[add_num:{StartAddress:1 ParamCount:2 ParamNames:[a b]}] callStack:[]}
