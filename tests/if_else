[]interface {}{[]interface {}{parser.Identifier{Value:"def"}, parser.Identifier{Value:"x"}, parser.Number{Value:1}}, []interface {}{parser.IfStatement{Condition:[]interface {}{parser.Operator{Value:">"}, parser.Identifier{Value:"x"}, parser.Number{Value:2}}, ThenBlock:[]interface {}{parser.Identifier{Value:"print"}, parser.String{Value:"'x is greater than 2'"}}, ElseBlock:parser.Identifier{Value:"print"}}, parser.String{Value:"'x is less than 2'"}}}
Raw Bytecode: [31 0 0 0 0 0 0 240 63 44 1 0 0 0 120 30 1 0 0 0 120 31 0 0 0 0 0 0 0 64 2 6 33 19 0 0 0 120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 50 9 7 30 5 0 0 0 112 114 105 110 116 8 33 16 0 0 0 120 32 105 115 32 108 101 115 115 32 116 104 97 110 32 50]
Generated Bytecode Instructions: [{31 [[0 0 0 0 0 0 240 63]]} {44 [[120]]} {30 [[120]]} {31 [[0 0 0 0 0 0 0 64]]} {2 []} {6 []} {33 [[120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 50]]} {9 []} {7 []} {30 [[112 114 105 110 116]]} {8 []} {33 [[120 32 105 115 32 108 101 115 115 32 116 104 97 110 32 50]]}]
Initial VM State:
&{stack:[] pc:0 code:[{Opcode:31 Operands:[[0 0 0 0 0 0 240 63]]} {Opcode:44 Operands:[[120]]} {Opcode:30 Operands:[[120]]} {Opcode:31 Operands:[[0 0 0 0 0 0 0 64]]} {Opcode:2 Operands:[]} {Opcode:6 Operands:[]} {Opcode:33 Operands:[[120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 50]]} {Opcode:9 Operands:[]} {Opcode:7 Operands:[]} {Opcode:30 Operands:[[112 114 105 110 116]]} {Opcode:8 Operands:[]} {Opcode:33 Operands:[[120 32 105 115 32 108 101 115 115 32 116 104 97 110 32 50]]}] symbolTable:map[]}
Executing Instruction: Opcode 31, Operands [[0 0 0 0 0 0 240 63]]
Stack after PUSH_NUMBER: [1]
Executing Instruction: Opcode 44, Operands [[120]]
Variable x defined with value: 1
Executing Instruction: Opcode 30, Operands [[120]]
Stack after PUSH_VARIABLE (x): [1]
Executing Instruction: Opcode 31, Operands [[0 0 0 0 0 0 0 64]]
Stack after PUSH_NUMBER: [1 2]
Executing Instruction: Opcode 2, Operands []
Stack after GRT: [false]
Executing Instruction: Opcode 6, Operands []
Executing Instruction: Opcode 7, Operands []
Executing Instruction: Opcode 8, Operands []
Executing Instruction: Opcode 33, Operands [[120 32 105 115 32 108 101 115 115 32 116 104 97 110 32 50]]
Stack after PUSH_STRING: [x is less than 2]
Final VM State:
&{stack:[x is less than 2] pc:12 code:[{Opcode:31 Operands:[[0 0 0 0 0 0 240 63]]} {Opcode:44 Operands:[[120]]} {Opcode:30 Operands:[[120]]} {Opcode:31 Operands:[[0 0 0 0 0 0 0 64]]} {Opcode:2 Operands:[]} {Opcode:6 Operands:[]} {Opcode:33 Operands:[[120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 50]]} {Opcode:9 Operands:[]} {Opcode:7 Operands:[]} {Opcode:30 Operands:[[112 114 105 110 116]]} {Opcode:8 Operands:[]} {Opcode:33 Operands:[[120 32 105 115 32 108 101 115 115 32 116 104 97 110 32 50]]}] symbolTable:map[x:1]}
