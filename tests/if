[]interface {}{parser.IfStatement{Condition:[]interface {}{parser.Operator{Value:">"}, parser.Number{Value:2}, parser.Number{Value:1}}, ThenBlock:[]interface {}{[]interface {}{parser.Identifier{Value:"print"}, parser.Number{Value:2}}}, ElseBlock:interface {}(nil)}}
Generated Bytecode Instructions: [{18 [2]} {18 [1]} {2 []} {3 []} {18 [2]} {6 []} {4 []} {5 []}]
Initial VM State:
&{stack:[] pc:0 code:[{Opcode:18 Operands:[2]} {Opcode:18 Operands:[1]} {Opcode:2 Operands:[]} {Opcode:3 Operands:[]} {Opcode:18 Operands:[2]} {Opcode:6 Operands:[]} {Opcode:4 Operands:[]} {Opcode:5 Operands:[]}] symbolTable:map[]}
Executing Instruction: Opcode 18, Operands [2]
Stack after PUSH_NUMBER: [2]
Executing Instruction: Opcode 18, Operands [1]
Stack after PUSH_NUMBER: [2 1]
Executing Instruction: Opcode 2, Operands []
Stack after GRT: [true]
Executing Instruction: Opcode 3, Operands []
Executing Instruction: Opcode 18, Operands [2]
Stack after PUSH_NUMBER: [2]
Executing Instruction: Opcode 6, Operands []
2
Executing Instruction: Opcode 4, Operands []
Executing Instruction: Opcode 5, Operands []
Final VM State:
&{stack:[] pc:8 code:[{Opcode:18 Operands:[2]} {Opcode:18 Operands:[1]} {Opcode:2 Operands:[]} {Opcode:3 Operands:[]} {Opcode:18 Operands:[2]} {Opcode:6 Operands:[]} {Opcode:4 Operands:[]} {Opcode:5 Operands:[]}] symbolTable:map[]}
