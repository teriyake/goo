Input: (let x:int -2) (if (< x 3) (if (> x 1) (print 'x is greater than 1 and less than 3')) else (if (= x -2) (print 'x equals -2') else (print 'x is greater than 3')))

AST: []interface {}{[]interface {}{parser.TypeAnnotation{Variable:"x", Type:"int"}, parser.Number{Value:-2}}, parser.IfStatement{Condition:[]interface {}{parser.Operator{Value:"<"}, []interface {}{parser.Identifier{Value:"x"}}, []interface {}{[]interface {}{parser.Number{Value:3}}}}, ThenBlock:parser.IfStatement{Condition:[]interface {}{parser.Operator{Value:">"}, []interface {}{parser.Identifier{Value:"x"}}, []interface {}{[]interface {}{parser.Number{Value:1}}}}, ThenBlock:[]interface {}{parser.Identifier{Value:"print"}, parser.String{Value:"'x is greater than 1 and less than 3'"}}, ElseBlock:interface {}(nil)}, ElseBlock:[]interface {}{parser.IfStatement{Condition:[]interface {}{parser.Operator{Value:"="}, []interface {}{parser.Identifier{Value:"x"}}, []interface {}{[]interface {}{parser.Number{Value:-2}}}}, ThenBlock:[]interface {}{parser.Identifier{Value:"print"}, parser.String{Value:"'x equals -2'"}}, ElseBlock:[]interface {}{parser.Identifier{Value:"print"}, parser.String{Value:"'x is greater than 3'"}}}}}}

Symbol Table:
Name: x, Type: %!s(compiler.SymbolType=0), Start Address: 0
Raw Bytecode: [29 0 0 0 0 0 0 0 192 32 1 0 0 0 120 28 1 0 0 0 120 29 0 0 0 0 0 0 8 64 5 44 28 1 0 0 0 120 29 0 0 0 0 0 0 240 63 4 44 31 35 0 0 0 120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 49 32 97 110 100 32 108 101 115 115 32 116 104 97 110 32 51 47 46 45 28 1 0 0 0 120 29 0 0 0 0 0 0 0 192 6 44 31 11 0 0 0 120 32 101 113 117 97 108 115 32 45 50 47 45 31 19 0 0 0 120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 51 47 46 46]
Pos: 0	Opcode: PUSH_NUMBER	Operands: [[0 0 0 0 0 0 0 192]]
Pos: 1	Opcode: DEFINE_VARIABLE	Operands: [[1 0 0 0] [120]]
Pos: 2	Opcode: PUSH_VARIABLE	Operands: [[1 0 0 0] [120]]
Pos: 3	Opcode: PUSH_NUMBER	Operands: [[0 0 0 0 0 0 8 64]]
Pos: 4	Opcode: LESS	Operands: []
Pos: 5	Opcode: IF	Operands: []
Pos: 6	Opcode: PUSH_VARIABLE	Operands: [[1 0 0 0] [120]]
Pos: 7	Opcode: PUSH_NUMBER	Operands: [[0 0 0 0 0 0 240 63]]
Pos: 8	Opcode: GRT	Operands: []
Pos: 9	Opcode: IF	Operands: []
Pos: 10	Opcode: PUSH_STRING	Operands: [[35 0 0 0] [120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 49 32 97 110 100 32 108 101 115 115 32 116 104 97 110 32 51]]
Pos: 11	Opcode: PRINT	Operands: []
Pos: 12	Opcode: ENDIF	Operands: []
Pos: 13	Opcode: ELSE	Operands: []
Pos: 14	Opcode: PUSH_VARIABLE	Operands: [[1 0 0 0] [120]]
Pos: 15	Opcode: PUSH_NUMBER	Operands: [[0 0 0 0 0 0 0 192]]
Pos: 16	Opcode: EQ	Operands: []
Pos: 17	Opcode: IF	Operands: []
Pos: 18	Opcode: PUSH_STRING	Operands: [[11 0 0 0] [120 32 101 113 117 97 108 115 32 45 50]]
Pos: 19	Opcode: PRINT	Operands: []
Pos: 20	Opcode: ELSE	Operands: []
Pos: 21	Opcode: PUSH_STRING	Operands: [[19 0 0 0] [120 32 105 115 32 103 114 101 97 116 101 114 32 116 104 97 110 32 51]]
Pos: 22	Opcode: PRINT	Operands: []
Pos: 23	Opcode: ENDIF	Operands: []
Pos: 24	Opcode: ENDIF	Operands: []

Initial VM State: 
VM State:
  Program Counter: 0
  Stack: []
  Symbol Table Stack:
    Symbol Table:
  Function Metadata:
  Call Stack:
    EMPTY

Executing Instruction at PC 0: Opcode 29, Operands [[0 0 0 0 0 0 0 192]]
VM State:
  Program Counter: 0
  Stack: []
  Symbol Table Stack:
    Symbol Table:
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_NUMBER: [-2]
Executing Instruction at PC 1: Opcode 32, Operands [[1 0 0 0] [120]]
VM State:
  Program Counter: 1
  Stack: [-2]
  Symbol Table Stack:
    Symbol Table:
  Function Metadata:
  Call Stack:
    EMPTY
Variable x defined with value: -2
Executing Instruction at PC 2: Opcode 28, Operands [[1 0 0 0] [120]]
VM State:
  Program Counter: 2
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_VARIABLE (x): [-2]
Executing Instruction at PC 3: Opcode 29, Operands [[0 0 0 0 0 0 8 64]]
VM State:
  Program Counter: 3
  Stack: [-2]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_NUMBER: [-2 3]
Executing Instruction at PC 4: Opcode 5, Operands []
VM State:
  Program Counter: 4
  Stack: [-2 3]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after LESS: [true]
Executing Instruction at PC 5: Opcode 44, Operands []
VM State:
  Program Counter: 5
  Stack: [true]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Executing Instruction at PC 6: Opcode 28, Operands [[1 0 0 0] [120]]
VM State:
  Program Counter: 6
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_VARIABLE (x): [-2]
Executing Instruction at PC 7: Opcode 29, Operands [[0 0 0 0 0 0 240 63]]
VM State:
  Program Counter: 7
  Stack: [-2]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_NUMBER: [-2 1]
Executing Instruction at PC 8: Opcode 4, Operands []
VM State:
  Program Counter: 8
  Stack: [-2 1]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after GRT: [false]
Executing Instruction at PC 9: Opcode 44, Operands []
VM State:
  Program Counter: 9
  Stack: [false]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Executing Instruction at PC 14: Opcode 28, Operands [[1 0 0 0] [120]]
VM State:
  Program Counter: 14
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_VARIABLE (x): [-2]
Executing Instruction at PC 15: Opcode 29, Operands [[0 0 0 0 0 0 0 192]]
VM State:
  Program Counter: 15
  Stack: [-2]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_NUMBER: [-2 -2]
Executing Instruction at PC 16: Opcode 6, Operands []
VM State:
  Program Counter: 16
  Stack: [-2 -2]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after EQ: [true]
Executing Instruction at PC 17: Opcode 44, Operands []
VM State:
  Program Counter: 17
  Stack: [true]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Executing Instruction at PC 18: Opcode 31, Operands [[11 0 0 0] [120 32 101 113 117 97 108 115 32 45 50]]
VM State:
  Program Counter: 18
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Stack after PUSH_STRING: [x equals -2]
Executing Instruction at PC 19: Opcode 47, Operands []
VM State:
  Program Counter: 19
  Stack: [x equals -2]
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY

---------------
| x equals -2 |
---------------

Executing Instruction at PC 20: Opcode 45, Operands []
VM State:
  Program Counter: 20
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY
Executing Instruction at PC 24: Opcode 46, Operands []
VM State:
  Program Counter: 24
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY

All instructions executed. Last executed instruction PC: 25
Exiting VM...

Final VM State: 
VM State:
  Program Counter: 25
  Stack: []
  Symbol Table Stack:
    Symbol Table:
      x: -2
  Function Metadata:
  Call Stack:
    EMPTY

