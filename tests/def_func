Input: (def hello (n) (print n))
AST: []interface {}{parser.FunctionDefinition{Name:"hello", Params:[]string{"n"}, Body:[]interface {}{[]interface {}{parser.Identifier{Value:"print"}, parser.Identifier{Value:"n"}}}}}
Raw Bytecode: [47 3 0 0 0 30 1 0 0 0 110 9 46 45 5 0 0 0 104 101 108 108 111 0 0 0 0 1 0 0 0]
Generated Bytecode Instructions: [{47 [[3 0 0 0]]} {30 [[110]]} {9 []} {46 []} {45 [[104 101 108 108 111] [0 0 0 0] [1 0 0 0]]}]
Initial VM State:
&{stack:[] pc:0 code:[{Opcode:47 Operands:[[3 0 0 0]]} {Opcode:30 Operands:[[110]]} {Opcode:9 Operands:[]} {Opcode:46 Operands:[]} {Opcode:45 Operands:[[104 101 108 108 111] [0 0 0 0] [1 0 0 0]]}] symbolTableStack:[0x1400008f320] functions:map[]}
Executing Instruction at PC 0: Opcode 47, Operands [[3 0 0 0]]
Current PC: 1	Jump offset: 3
Updated PC: 4
Executing Instruction at PC 4: Opcode 45, Operands [[104 101 108 108 111] [0 0 0 0] [1 0 0 0]]
Function hello defined with param count: 1
Function hello starts at: 0
Current PC: 6
Final VM State:
&{stack:[] pc:6 code:[{Opcode:47 Operands:[[3 0 0 0]]} {Opcode:30 Operands:[[110]]} {Opcode:9 Operands:[]} {Opcode:46 Operands:[]} {Opcode:45 Operands:[[104 101 108 108 111] [0 0 0 0] [1 0 0 0]]}] symbolTableStack:[0x1400008f320] functions:map[hello:{StartAddress:0 ParamCount:1}]}
